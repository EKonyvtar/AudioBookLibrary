/*
 * Copyright (C) 2014 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'

//Add Crashlytics and performance reporting
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.firebase.firebase-perf'

android {
    compileSdkVersion 30
    buildToolsVersion '29.0.3'

    defaultConfig {
        applicationId "com.murati.audiobook"
        minSdkVersion 22
        targetSdkVersion 30
        multiDexEnabled true
        versionCode 80
        versionName "0.27.${versionCode}"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        //Universal App constants
        buildConfigField 'String', 'CAST_APP_ID', '"CC1AD845"'
        buildConfigField 'String', 'APPSTORE_EMAIL', '"dev@murati.hu"'
        buildConfigField 'String', 'APPSTORE_PRIVACY_URL', '"https://ekonyvtar.github.io/audiobook-privacy_policy.html"'
    }

    // TODO: Auto signing:
    // https://developer.android.com/studio/build/build-variants
    // System.getenv("KSTORE")

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }


    lintOptions {
        abortOnError false
    }

    buildTypes {
        release {
            minifyEnabled false //TODO: change
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }



    flavorDimensions 'catalogue', 'language_pack', 'store'

    variantFilter { variant ->
        def catalogue = variant.getFlavors().get(0).name.toLowerCase()
        def language_pack = variant.getFlavors().get(1).name.toLowerCase()

        if (
            catalogue.contains("hu") && !language_pack.contains("hu") // Not clearly Hun
            || !catalogue.contains("hu") && language_pack.contains("hu") //Clearly multilingual
        ) {
            setIgnore(true)
        }
    }

    productFlavors {

        def addConstantTo = {target, constantName, constantValue ->
            target.manifestPlaceholders += [ (constantName):constantValue]
            target.resValue "string",  "${constantName}", "${constantValue}"
            target.buildConfigField "String", "${constantName}", "\"${constantValue}\""
        }

        // Catalogue Definitions

        hungarian {
            dimension "catalogue"
            applicationId "com.murati.oszk.audiobook"
            versionNameSuffix "-hu"

            // Flavor specific constants
            addConstantTo(owner, "APP_NAME", "Hangoskönyvtár")
            addConstantTo(owner, "ADMOB_APP_ID", "ca-app-pub-2604838220069332~7544903903")
            addConstantTo(owner, "ADMOB_UNIT_ID_1", "ca-app-pub-2604838220069332/1672919685")

            //Multidimension constants
            addConstantTo(owner, "APPSTORE_HUAWEI_ID", "C101706787")
        }

        bible_hu {
            dimension "catalogue"
            applicationIdSuffix ".bible.hu"
            versionNameSuffix "-bible-hu"

            // Flavor specific constants
            addConstantTo(owner, "APP_NAME", "Biblia")
            addConstantTo(owner, "ADMOB_APP_ID", "ca-app-pub-2604838220069332~1186624167")
            addConstantTo(owner, "ADMOB_UNIT_ID_1", "ca-app-pub-2604838220069332/7627909437")

            //Multidimension constants
            addConstantTo(owner, "APPSTORE_HUAWEI_ID", "C101857927")
        }

        french {
            dimension "catalogue"
            applicationIdSuffix ".fr"
            versionNameSuffix "-fr"

            // Flavor specific constants
            addConstantTo(owner, "APP_NAME", "Livres Audio")
            addConstantTo(owner, "ADMOB_APP_ID", "ca-app-pub-2604838220069332~5194573746")
            addConstantTo(owner, "ADMOB_UNIT_ID_1", "ca-app-pub-2604838220069332/6124512033")

            //Multidimension constants
            addConstantTo(owner, "APPSTORE_HUAWEI_ID", "C101723805")
        }

        spanish {
            dimension "catalogue"
            applicationIdSuffix ".es"
            versionNameSuffix "-es"

            // Flavor specific constants
            addConstantTo(owner, "APP_NAME", "AudioLibros")
            addConstantTo(owner, "ADMOB_APP_ID", "ca-app-pub-2604838220069332~8227204847")
            addConstantTo(owner, "ADMOB_UNIT_ID_1", "ca-app-pub-2604838220069332/3875405609")

            //Multidimension constants
            addConstantTo(owner, "APPSTORE_HUAWEI_ID", "C101720491")
        }

        german {
            dimension = 'catalogue'
            applicationIdSuffix = '.de'
            versionNameSuffix = '-de'

            // Flavor specific constants
            addConstantTo(owner, "APP_NAME", "Hörbücher Bibliothek")
            addConstantTo(owner, "ADMOB_APP_ID", "ca-app-pub-2604838220069332~3034430096")
            addConstantTo(owner, "ADMOB_UNIT_ID_1", "ca-app-pub-2604838220069332/8178945564")

            //Multidimension constants
            addConstantTo(owner, "APPSTORE_HUAWEI_ID", "C101777037")
        }

        // Language Packs
        LangHun {
            dimension = 'language_pack'
            resConfigs 'hu', 'en'
        }

        LangMulti {
            dimension = 'language_pack'
            resConfigs 'en', 'fr', 'es', 'de'
        }


        // Store definitions
        GooglePlay {
            dimension = 'store'
            buildConfigField 'String', 'APPSTORE_URL', '"http://play.google.com/store/apps/details?id=%s"'
        }

        HuaweiAppGallery {
            dimension = 'store'
            buildConfigField 'String', 'APPSTORE_URL', '"https://appgallery.cloud.huawei.com/marketshare/app/%s"'
        }

        //TODO: define paid and free dimensions
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
    google()
    jcenter()
}

dependencies {
    implementation 'androidx.multidex:multidex:2.0.1'

    compileOnly 'com.google.android.wearable:wearable:2.7.0'

    // Upgrade 18 errors:
    // ERROR: Manifest merger failed : Attribute meta-data#android.support.VERSION@value value=(26.0.2) from [com.android.support:support-v4:26.0.2] AndroidManifest.xml:28:13-35
    //	is also present at [com.android.support:customtabs:26.1.0] AndroidManifest.xml:25:13-35 value=(26.1.0).
    //	Suggestion: add 'tools:replace="android:value"' to <meta-data> element at AndroidManifest.xml:26:9-28:38 to override.
    implementation 'com.google.android.gms:play-services-cast-framework:18.1.0'
    implementation 'com.google.android.support:wearable:2.7.0'

    implementation 'androidx.legacy:legacy-support-core-utils:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.mediarouter:mediarouter:1.1.0'
    implementation 'androidx.leanback:leanback:1.0.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.percentlayout:percentlayout:1.0.0'

    //Exoplayer
    implementation 'com.google.android.exoplayer:exoplayer:2.8.0' //2.9..

    //Graphical libraries
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

    //Firebase
    implementation 'com.google.firebase:firebase-core:17.4.4'

    //Crashlytics
    implementation 'com.google.firebase:firebase-crashlytics:17.1.1'

    //Performance
    implementation 'com.google.firebase:firebase-perf:19.0.7'

    //Admob
    implementation 'com.google.android.gms:play-services-ads:17.2.0'

    //Remote Config
    implementation 'com.google.firebase:firebase-config:19.2.0'

    // Recommended: Add the Google Analytics SDK.
    //implementation 'com.google.firebase:firebase-analytics:17.4.4'

    // In-app messaging
    //implementation 'com.google.firebase:firebase-inappmessaging-display:17.0.0'

    // Test
    testImplementation 'junit:junit:4.13'
    testImplementation 'org.mockito:mockito-core:2.15.0'
    androidTestImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.annotation:annotation:1.1.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test:rules:1.2.0'
}

apply plugin: 'com.google.gms.google-services'

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" // << "-Xlint:deprecation"
        }
    }
}
